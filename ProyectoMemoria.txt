Autores:
Luis García Garcés 739202
Saúl Flores Benavente 755769

Planteamiento:
Red entre debian1 y debian 2 192.168.1.0
Debian 1 192.168.1.1
Debian 2 192.168.1.2

Red entre debian1,3,4 y 6 192.168.2.0
Debian 1 192.168.2.1
Debian 3 y 4 red proporcionada por dhcp
Debian 6 Ip fija 192.168.2.6

Red entre debian 5 y debian 6 192.168.3.0
Debian 5 192.168.3.5
Debian 6 192.168.3.6

Todos los comandos se han ejecutado desde el usuario root.
Inicialmente para disponer de los comandos necesarios para revisar el estado de las interfaces en las
máquinas instalamos "net-tools"
apt-get install net-tools

En debian 1 instalar tcpdump para poder ver el tráfico tcp que circula a través de esta máquina.
Utilizar  el comando tcp para ver el flujo:
tcpdump -n -i  INTERFAZ icmp
De esta forma podremos ver los paquetes que circulan por las interfaces de debian 1 y saber
que todo funciona.

SERVIDOR DHCP
Para poder instalar un servidor dhcp es necesario instalar "isc-dhcp-server" en la máquina
debian 1.
apt-get install isc-dhcp-sever

Posteriormente tuveimos que asignar una ip a la intefaz de red a la que iba a asociar ese
servidor dhcp:
ifconfig enp0s8 192.168.2.1

Para fijar la interfaz al servidor dhcp hay que editar el fichero
/etc/defaults/isc-dhp-sever de esta forma:
INTERFACES="enp0s8"
(En el caso de tener Interfacev4 tambien puede hacerse)

A continuación editamos el fichero /etc/dhcp/dhcpd.conf:
Creamos la subred de IPs que asignaremos a debian 3 y debian4:
subnet 192.168.2.0 netmask 255.255.255.0{
range 192.168.2.5 192.168.2.60;
option broadcast-address 192.168.2.255;
option routers 192.168.2.1; //Para establecer la Ip del router
option domain-name-server 8.8.8.8,8.8.4.4; //DNS del servidor, usamos los del Google
}
Para poder utilizar debian6 siempre como pasarela es necesario asignarle una IP fija en el servidor
host debian6{
hardware ethernet "AÑADIR MAC"; //La MAC de la tarjeta de red.
fixed-address 192.168.2.6;
}
De esta forma hemos asociado a debian6 una IP fija.
En el fichero de Interfaces de los nodos que conectaremos al servidor.
allow-hotplug enp0s3
iface enp0s3 inet dhcp

En este caso se encuentra en la Interfaz enp0s3 porque debian 3 y debian 4
solo estan conectadas a una interfaz y en debian 6 es su primera red.
Las máquinas conectadas al servidor dhcp tiene por default gateway el router de su servidor,se
conectarán a internet a través de este.

PASARELA DEBIAN 6
Para que debian 6 actue de pasarela entre debian 1 y debian 5.
Debian 1 y debian 6 se encuentran conectados a través de la red interna 2,por lo tanto
en el caso de que a debian 1 le llegue una petición para una máquina la desviará a través
de debian 6. Para ello tuvimos que añadir a la configuración de la interfaz enp0s9 en debian 1:

up route add -net 192.168.3.0 netmask 255.255.255.0 gw 192.168.2.6

En debian 5 tuvimos que dejar por default gateway a 192.168.3.6 ejecutando el comando:
route add default gw 192.168.3.6

Para que Debian 6 pueda desviar tráfico a debian 5:
echo 1 > /proc/sys/net/ipv4/ip_forward
Y para hacerlo permanente modificamos en fichero:
/etc/sysctl.conf

CONFIGURACIÓN ROUTER 
iptables -F
iptables -t nat -F
iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP
 
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT


Para que Debian 1 pueda actuar de router debemos confirmar que esta activo ip_forward.
Para ello hacemos:
echo 1 > /proc/sys/net/ipv4/ip_forward
Y para hacerlo permanente modificamos en fichero /etc/sysctl.conf descomentando la línea:
net.ipv4.ip_forward=1

Para permitir que las redes internas tuvieran acceso internet ejecutamos los comandos iptables:
iptables -t nat -A POSTROUTING -o enp0s3 -j MASQUERADE
iptables -A FORWARD -o enp0s3 -s 192.168.0.0/22 -m conntrack --ctstate NEW -j ACCEPT


De esta forma todo paquete que sale de la interfaz enp0s3 hacia internet toma la dirección
ip del router.


Para finalizar rechazamos de forma silenciosa cualquier tipo de tráfico desde enp0s3 (internet) y enp0s10 (HOST)
que no cumpla los requisitos de este trabajo:

iptables -A INPUT -m conntrack --ctstate INVALID -j DROP
iptables -A OUTPUT -m conntrack --ctstate INVALID -j DROP
iptables -A FORWARD -m conntrack --ctstate INVALID -j DROP
	
Vease que no estamos denegando cadenas FORWARD por lo tanto las máquinas de las redes internas siguen teniendo acceso
a internet.

iptables -A INPUT -i enp0s8 -s 192.168.1.0/24 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -i enp0s8 -s 192.168.1.0/24 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i enp0s9-s 192.168.2.0/23 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
iptables -A INPUT -i enp0s9 -s 192.168.2.0/23 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -i enp0s9 -s 192.168.2.0/23 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT


Sistema de Logging para detectar errores:
iptables -A INPUT -j LOG --log-level DEBUG --log-prefix 'CONTENIDO INPUT:'
iptables -A OUTPUT -j LOG --log-level DEBUG --log-prefix 'CONTENIDO OUTPUT:'
iptables -A FORWARD -j LOG --log-level DEBUG --log-prefix 'CONTENIDO FORWARD:'

SERVIDOR SSH

En debian 5,inicialmente hay que instalar el servidor SSH para ello ejecutaremos el comando:
apt-get install openssh-server 
Configuraremos el servidor para no poder acceder a root desde ssh.Para ello editaremos el fichero
/etc/ssh/sshd_config añadiendo "PermitRootLogin no" al final del fichero.

En debian 1 configuramos el Firewall:

Para que las reglas de iptables se mantengan al apagar los equipos,
iinstalamos el paquete iiptables persistent que se encarga de hacer un restore de las reglas
de iptables que guardamos.
sudo apt install iptables-persistent

Cada vez que se modifiquen las reglas a usar, se deben guardar en el fichero que almacena las reglas a ejecutar al arrarcar.
Esto se puede hacer volcando la salida del comando iptables-save en el fichero correspondiente 
/etc/iptables/rules.v4 o /etc/iptables/rules.v6
iptables-save > /etc/iptables/rules.v4

Para desviar todo el tráfico SSH hacia la máquina Debian 5 debemos ejecutar:
iptables -t nat -A PREROUTING -d 192.168.10.10 -i enp0s10 -p tcp -m tcp --dport 22 -j DNAT --to-destination 192.168.3.5:22	//Desde Host

Para permitir conexiones al puerto 22 (SSH) ejecutamos el comando:

iptables -A FORWARD -d 192.168.3.5 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
//Permitir trafico SSH desde internet
iptables -A INPUT -i enp0s3 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT	
//Permitir trafico SSH desde host
iptables -A INPUT -i enp0s10 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT

SERVIDOR APACHE:
iptables -A FORWARD -d 192.168.1.2 -p tcp --dport 80 -j ACCEPT	//HTTP
iptables -A FORWARD -d 192.168.1.2 -p tcp --dport 443 -j ACCEPT	//HTTPS

iptables -t nat -A PREROUTING -d 192.168.10.10 -i enp0s10 -p tcp -m tcp --dport 80 -j DNAT --to-destination 192.168.1.2:80	//HTTP
iptables -t nat -A PREROUTING -d 192.168.10.10 -i enp0s10 -p tcp -m tcp --dport 443 -j DNAT --to-destination 192.168.1.2:443	//HTTPS


iptables -A INPUT -i enp0s3 -p tcp --dport 80 -j ACCEPT	//Permitir trafico HTTP desde internet (enp0s3 = interfaz NAT a internet)
iptables -A INPUT -i enp0s3 -p tcp --dport 443 -j ACCEPT//Permitir trafico HTTPS desde internet
iptables -A INPUT -i enp0s10 -p tcp --dport 80 -j ACCEPT//Permitir trafico HTTP desde host (enp0s10 = interfaz conectada a host-only network)
iptables -A INPUT -i enp0s10 -p tcp --dport 443 -j ACCEPT//Permitir trafico HTTPS desde host

apt install apache2
Modificar el fichero ports.conf:
Donde esta  Listen 80, sustituir por Listen<IP>:<Port> siendo Ip la ip con la que queremos acceder al servidor y Port el puerto.
En este caso la ip sera la que tiene Debian 2 en su subred y el puerto sera el 80 para http y el 443 para https.
Para reconocer el servidor en local, complementar con Listen 127.0.0.1:80 y/o
Listen 127.0.0.1:443


CONFIGURACIÓN FICHEROS DE INTERFACES
Ficheros /etc/network/interfaces de cada máquina:
Debian 1:

allow-hotplug enp0s3
iface enp0s3 inet dhcp

auto enp0s8
iface enp0s8 inet static
address 192.168.1.1
netmask 255.255.255.0

auto enp0s9
iface enp0s9 inet static
address 192.168.2.1
netmask 255.255.255.0
up route add -net 192.168.3.0 netmask 255.255.255.0 gw 192.168.2.6 //Para utilizarlo de pasarela.

auto enp0s10
iface enp0s10 inet static
address 192.168.10.10
netmask 255.255.255.0

Debian 2:

auto enp0s8
iface enp0s8 inet static
address 192.168.1.2
netmask 255.255.255.0

Debian 3:

allow-hotplug enp0s3
iface enp0s3 inet dhcp

Debian 4:

allow-hotplug enp0s3
iface enp0s3 inet dhcp

Debian 5:

auto enp0s3
iface enp0s3 inet static
address 192.168.3.5
netmask 255.255.255.0
Debian 6:

allow-hotplug enp0s3
iface enp0s3 inet dhcp

auto enp0s8
iface enp0s8 inet static
address 192.168.3.6
netmask 255.255.255.0

HOST:
auto enp0s8
iface enp0s8 inet static
address 192.168.10.2
netmask 255.255.255.0




